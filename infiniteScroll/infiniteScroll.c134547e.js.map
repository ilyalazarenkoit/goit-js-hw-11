{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,WAIA,MAEMC,EAAe,IAAIC,gBAAgB,CACrCC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,SAAU,KAGdC,eAAeC,EAAUC,EAASC,GAClC,IAEI,aADuBX,EAAAY,QAAMC,IAAI,qEAAiCH,KAAWR,UAAqBS,I,CAErG,MAAMG,GACHC,QAAQC,IAAIF,E,EChBhB,IAAIG,EAAS,GACb,SAASC,EAAaC,GAClBF,EAASE,EAAMC,KAAIC,GACZ,iCAAiCA,EAAKC,sEACrBD,EAAKE,qBAAqBF,EAAKG,+GAIjDH,EAAKI,iFAILJ,EAAKK,oFAILL,EAAKM,wFAILN,EAAKO,4DAKPC,KAAK,IACRC,EAAQC,WAAad,C,+BCtB1B,MAAMa,EAAUE,SAASC,cAAc,YACjCC,EAAOF,SAASC,cAAc,gBAEpC,IACIE,EADAC,EAAQ,EAGZF,EAAKG,iBAAiB,UAStB7B,eAAyB8B,GACvBH,EAAUG,EAAMC,cAAcC,YAAYC,MACzCH,EAAMI,iBAqBPN,EAAQ,EACRN,EAAQC,UAAY,GApBnB,MAAMY,QAAiBlC,EAAU0B,EAASC,GAC1CrB,QAAQC,IAAI2B,GACZ,IAAIC,QAAiBD,EAASE,KAAKC,KACnC/B,QAAQC,IAAI4B,GACY,IAApBA,EAASG,QACVC,EAAAC,GAASC,OAAOC,QAAQ,4EAE1BjC,EAAa0B,GAEVA,EAASG,OAAS,GACrBC,EAAAC,GAASC,OAAOE,QAAQ,oBAAoBT,EAASE,KAAKQ,qBAE7C,IAAIL,EAAAM,GAAJ,CAAmB,aAAc,CAC9CC,aAAc,MACdC,aAAc,K,IA1BlBC,OAAOpB,iBAAiB,UAAU,KAChBoB,OAAOC,YAAcD,OAAOE,aAAe3B,SAAS4B,KAAKC,cAsC3ErD,iBACE,IAAIsD,GALWC,EAKQ3B,IAJd2B,GADX,IAAiBA,EAMf,MAAMC,QAAoCvD,EAAU0B,EAAS2B,GAC7D/C,QAAQC,IAAIgD,GACZ,MAAMC,QAAwBD,EAA4BnB,KAAKC,KAC5DmB,EAAgBlB,OAAS,IAC1BC,EAAAC,GAASC,OAAOgB,KAAK,8DAEvBnD,QAAQC,IAAIiD,GACZ/C,EAAa+C,GACb7B,IACe,IAAIY,EAAAM,GAAJ,CAAmB,aAAc,CAC9CC,aAAc,MACdC,aAAc,MAEhB,MAAQW,OAAQC,GAAepC,SAC9BC,cAAc,YACdoC,kBAAkBC,wBAErBb,OAAOc,SAAS,CACdC,IAAkB,EAAbJ,EACLK,SAAU,U,CAzDRC,EAAY","sources":["src/infiniteScroll/fetchData.js","src/infiniteScroll/renderMarkup.js","src/infiniteScroll/infiniteScroll.js"],"sourcesContent":["import axios from \"axios\";\nimport Notiflix from 'notiflix';\nimport { pages } from \"./infiniteScroll\";\n\nconst BASE_URL = \"https://pixabay.com/api/\"\nconst USER_KEY = \"31138413-9963ca1c42c5ab8454e713dbb\"\nconst searchParams = new URLSearchParams({\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: true,\n    per_page: 40,\n  });\n\nasync function fetchData(keyWord, page) {\ntry {\n    const response = await axios.get(`${BASE_URL}?key=${USER_KEY}&q=${keyWord}&${searchParams}&page=${page}`);\n    return response\n}catch(error) {\n    console.log(error)\n}\n}\n\n\nexport {fetchData, BASE_URL , USER_KEY, searchParams}","import { gallery } from \"./infiniteScroll\";\n\nlet markup = \"\";\nfunction renderMarkup(array) {\n    markup = array.map(item => {\n    return `<a class=\"gallery__item\" href=${item.largeImageURL} ><div class=\"photo-card\">\n    <img class=\"image\"src=${item.webformatURL} alt=\"${item.tags}\" loading=\"lazy\" />\n    <div class=\"info\">\n      <p class=\"info-item\">\n        <b>Likes</b>\n        ${item.likes}\n      </p>\n      <p class=\"info-item\">\n        <b>Views</b>\n        ${item.views}\n      </p>\n      <p class=\"info-item\">\n        <b>Comments</b>\n        ${item.comments}\n      </p>\n      <p class=\"info-item\">\n        <b>Downloads</b>\n        ${item.downloads}\n      </p>\n    </div>\n    </div>\n    </a>`\n     }).join('')\n     gallery.innerHTML += markup;\n    }\n    \nexport {renderMarkup}","import { fetchData, page, searchParams } from \"./fetchData\"\nimport { renderMarkup } from \"./renderMarkup\"\nimport Notiflix from \"notiflix\"\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\"\n\nconst gallery = document.querySelector(\".gallery\")\nconst form = document.querySelector(\".search-form\")\n\nlet pages = 1;\nlet request;\n\nform.addEventListener(\"submit\", onSubmit)\nwindow.addEventListener(\"scroll\", () => {\nconst endOfPage = window.innerHeight + window.pageYOffset >= document.body.offsetHeight;\n  if (endOfPage) {\n    onLoadMore() ;\n  }\n});\n\n\nasync function onSubmit (event) {\n  request = event.currentTarget.searchQuery.value\n   event.preventDefault();\n   resetPage()\n   const response = await fetchData(request, pages)\n   console.log(response);\n   let fetching = await response.data.hits\n   console.log(fetching)\n    if(fetching.length === 0) {\n      Notiflix.Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\"); \n    }\n    renderMarkup(fetching)\n    \n    if(fetching.length > 1) {\n    Notiflix.Notify.success(`Hooray! We found ${response.data.totalHits} images.`);\n  }\n  var lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n    })\n}\n\nfunction resetPage() {\n  pages = 1\n  gallery.innerHTML = \"\"\n}\n\nfunction newPage(pages) {\n  return ++pages\n}\n\nasync function onLoadMore () {\n  let newPages = newPage(pages)\n  const preparingForAdditionalFetch = await fetchData(request, newPages)\n  console.log(preparingForAdditionalFetch)\n  const additionalFetch = await preparingForAdditionalFetch.data.hits\n  if(additionalFetch.length < 40) {\n    Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n  console.log(additionalFetch)\n  renderMarkup(additionalFetch)\n  pages++ \n  var lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n    })\n  const { height: cardHeight } = document\n  .querySelector(\".gallery\")\n  .firstElementChild.getBoundingClientRect();\n\nwindow.scrollBy({\n  top: cardHeight * 2,\n  behavior: \"smooth\",\n});\n}\n\n\nexport {gallery}\n\n"],"names":["$2shzp","parcelRequire","$cdfb18c0299daf08$export$dc77997033077144","URLSearchParams","image_type","orientation","safesearch","per_page","async","$cdfb18c0299daf08$export$8134c072fddab6a5","keyWord","page","default","get","error","console","log","$9d4ee065e31830ec$var$markup","$9d4ee065e31830ec$export$add40575555c273c","array","map","item","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","$2b1ad32b71c2d5ef$export$b21c1b4271bdbe93","innerHTML","document","querySelector","$2b1ad32b71c2d5ef$var$form","$2b1ad32b71c2d5ef$var$request","$2b1ad32b71c2d5ef$var$pages","addEventListener","event","currentTarget","searchQuery","value","preventDefault","response","fetching","data","hits","length","$parcel$interopDefault","$eWCmQ","Notify","failure","success","totalHits","$fZKcF","captionsData","captionDelay","window","innerHeight","pageYOffset","body","offsetHeight","newPages","pages1","preparingForAdditionalFetch","additionalFetch","info","height","cardHeight","firstElementChild","getBoundingClientRect","scrollBy","top","behavior","$2b1ad32b71c2d5ef$var$onLoadMore"],"version":3,"file":"infiniteScroll.c134547e.js.map"}