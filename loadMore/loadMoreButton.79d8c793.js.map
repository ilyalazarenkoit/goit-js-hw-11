{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,gBCAAD,EAAAC,EAAA,S,oCAIA,IAAMC,EAAW,2BACXC,EAAW,qCACXC,EAAe,IAAIC,gBAAgB,CACrCC,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,SAAU,K,SAGCC,EAAUC,EAASC,G,OAAnBC,EAASC,MAAAC,KAAAC,U,UAATH,I,OAAAA,EAAfI,EAAAjB,EAAA,CAAAiB,EAAAC,GAAAC,MAAA,SAAAC,EAAyBT,EAASC,G,IAExBS,E,2FAAiBC,EAAAC,QAAMC,IAAI,GAAmBC,OAAhBvB,EAAS,SAAqBuB,OAAdtB,EAAS,OAAgBsB,OAAXd,EAAQ,KAAwBc,OAArBrB,EAAa,UAAaqB,OAALb,I,cAA5FS,EAAQK,EAAAC,K,kBACPN,G,gCAEPO,QAAQC,IAAGH,EAAAI,I,0DALShB,MAAAC,KAAAC,U,CCVxB,SAASe,EAAaC,GAClBC,OAASD,EAAME,KAAI,SAAAC,GACnB,MAAO,iCACiBV,OADgBU,EAAKC,cAAc,0DACTX,OAA1BU,EAAKE,aAAa,UAIpCZ,OAJ4CU,EAAKG,KAAK,4GAQtDb,OAJAU,EAAKI,MAAM,6EAQXd,OAJAU,EAAKK,MAAM,gFAQXf,OAJAU,EAAKM,SAAS,iFAIChB,OAAfU,EAAKO,UAAU,iD,IAKjBC,KAAK,IACRC,EAAQC,WAAaZ,M,KFjBtBa,E,0BALEC,EAAOC,SAASC,cAAc,gBAC9BC,EAAiBF,SAASC,cAAc,qBACxCL,EAAUI,SAASC,cAAc,YAEnCE,EAAQ,E,SAOGC,I,OAAAA,EAAfnC,EAAAjB,EAAA,CAAAiB,EAAAC,GAAAC,MAAA,SAAAC,EAAyBiC,G,IAIhBhC,EAEFiC,E,yEALLR,EAAUO,EAAME,cAAcC,YAAYC,MACzCJ,EAAMK,iBACNC,I,SACuBjD,EAAUoC,EAASK,G,cAApC9B,EAAQK,EAAAC,KACdC,QAAQC,IAAIR,G,SACSA,EAASuC,KAAKC,K,OAA/BP,EAAQ5B,EAAAC,KACZC,QAAQC,IAAIyB,GACY,IAApBA,EAASQ,QACV7C,EAAA8C,GAASC,OAAOC,QAAQ,4EAE1BlC,EAAauB,GACbJ,EAAegB,UAAUC,OAAO,aAC7Bb,EAASQ,OAAS,IACnBZ,EAAegB,UAAUE,IAAI,aAE5Bd,EAASQ,OAAS,GACrB7C,EAAA8C,GAASC,OAAOK,QAAQ,oBAA4C5C,OAAxBJ,EAASuC,KAAKU,UAAU,aAEvD,IAAIrD,EAAAsD,GAAJ,CAAmB,aAAc,CAC9CC,aAAc,MACdC,aAAc,M,6CArBK3D,MAAAC,KAAAC,U,CA0BvB,SAAS2C,IACPR,EAAQ,EACRP,EAAQC,UAAY,E,CAGtB,SAAS6B,EAAQC,GACf,QAASA,C,UAGIC,I,OAAAA,EAAf3D,EAAAjB,EAAA,CAAAiB,EAAAC,GAAAC,MAAA,SAAAC,I,IACMyD,EACEC,EAEAC,E,yEAHFF,EAAWH,EAAQvB,G,SACmBzC,EAAUoC,EAAS+B,G,cAAvDC,EAA2BpD,EAAAC,KACjCC,QAAQC,IAAIiD,G,SACkBA,EAA4BlB,KAAKC,K,QAAzDkB,EAAerD,EAAAC,MACFmC,OAAS,KAC1BZ,EAAegB,UAAUE,IAAI,aAC7BnD,EAAA8C,GAASC,OAAOgB,KAAK,+DAEvBpD,QAAQC,IAAIkD,GACZhD,EAAagD,GACb5B,IACe,IAAIlC,EAAAsD,GAAJ,CAAmB,aAAc,CAC9CC,aAAc,MACdC,aAAc,M,6CAdO3D,MAAAC,KAAAC,U,CAvCzB+B,EAAKkC,iBAAiB,U,SAIG5B,G,OAAVD,EAAQtC,MAAAC,KAAAC,U,IAHvBkC,EAAe+B,iBAAiB,S,kBAsCjBL,EAAU9D,MAAAC,KAAAC,U","sources":["src/loadMore/loadMore.js","src/loadMore/fetchData.js","src/loadMore/renderMarkup.js"],"sourcesContent":["import { fetchData, page, searchParams } from \"./fetchData\"\nimport { renderMarkup } from \"./renderMarkup\"\nimport Notiflix from \"notiflix\"\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\"\n\nconst form = document.querySelector(\".search-form\")\nconst buttonLoadMore = document.querySelector(\".button_load-more\")\nconst gallery = document.querySelector(\".gallery\")\n\nlet pages = 1;\nlet request;\n\nform.addEventListener(\"submit\", onSubmit)\nbuttonLoadMore.addEventListener(\"click\", onLoadMore)\n\n\nasync function onSubmit (event) {\n  request = event.currentTarget.searchQuery.value\n   event.preventDefault();\n   resetPage()\n   const response = await fetchData(request, pages)\n   console.log(response);\n   let fetching = await response.data.hits\n   console.log(fetching)\n    if(fetching.length === 0) {\n      Notiflix.Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\"); \n    }\n    renderMarkup(fetching)\n    buttonLoadMore.classList.remove(\"is-hidden\")\n    if(fetching.length < 40) {\n      buttonLoadMore.classList.add(\"is-hidden\")\n    }\n    if(fetching.length > 1) {\n    Notiflix.Notify.success(`Hooray! We found ${response.data.totalHits} images.`);\n  }\n  var lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n    })\n}\n\n\nfunction resetPage() {\n  pages = 1\n  gallery.innerHTML = \"\"\n}\n\nfunction newPage(pages) {\n  return ++pages\n}\n\nasync function onLoadMore () {\n  let newPages = newPage(pages)\n  const preparingForAdditionalFetch = await fetchData(request, newPages)\n  console.log(preparingForAdditionalFetch)\n  const additionalFetch = await preparingForAdditionalFetch.data.hits\n  if(additionalFetch.length < 40) {\n    buttonLoadMore.classList.add(\"is-hidden\")\n    Notiflix.Notify.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n  console.log(additionalFetch)\n  renderMarkup(additionalFetch)\n  pages++ \n  var lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n    })\n}\n\n\nexport {gallery}\n\n","import axios from \"axios\";\nimport Notiflix from 'notiflix';\nimport { pages } from \"./loadMore\";\n\nconst BASE_URL = \"https://pixabay.com/api/\"\nconst USER_KEY = \"31138413-9963ca1c42c5ab8454e713dbb\"\nconst searchParams = new URLSearchParams({\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: true,\n    per_page: 40,\n  });\n\nasync function fetchData(keyWord, page) {\ntry {\n    const response = await axios.get(`${BASE_URL}?key=${USER_KEY}&q=${keyWord}&${searchParams}&page=${page}`);\n    return response\n}catch(error) {\n    console.log(error)\n}\n}\n\n\nexport {fetchData, BASE_URL , USER_KEY, searchParams}","import { gallery } from \"./loadMore\";\n\n\nfunction renderMarkup(array) {\n    markup = array.map(item => {\n    return `<a class=\"gallery__item\" href=${item.largeImageURL} ><div class=\"photo-card\">\n    <img class=\"image\"src=${item.webformatURL} alt=\"${item.tags}\" loading=\"lazy\" />\n    <div class=\"info\">\n      <p class=\"info-item\">\n        <b>Likes</b>\n        ${item.likes}\n      </p>\n      <p class=\"info-item\">\n        <b>Views</b>\n        ${item.views}\n      </p>\n      <p class=\"info-item\">\n        <b>Comments</b>\n        ${item.comments}\n      </p>\n      <p class=\"info-item\">\n        <b>Downloads</b>\n        ${item.downloads}\n      </p>\n    </div>\n    </div>\n    </a>`\n     }).join('')\n     gallery.innerHTML += markup;\n    }\n    \nexport {renderMarkup}"],"names":["$bpxeT","parcelRequire","$3e588ee6e64db7ec$export$ca6dda5263526f75","$3e588ee6e64db7ec$export$c8269609c9765a21","$3e588ee6e64db7ec$export$dc77997033077144","URLSearchParams","image_type","orientation","safesearch","per_page","$3e588ee6e64db7ec$export$8134c072fddab6a5","keyWord","page","$3e588ee6e64db7ec$var$_fetchData","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","response","$dIxxU","default","get","concat","_ctx","sent","console","log","t0","$3809a730d5d4acfb$export$add40575555c273c","array","markup","map","item","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","$7467fde09acedec4$export$b21c1b4271bdbe93","innerHTML","$7467fde09acedec4$var$request","$7467fde09acedec4$var$form","document","querySelector","$7467fde09acedec4$var$buttonLoadMore","$7467fde09acedec4$var$pages","$7467fde09acedec4$var$_onSubmit","event","fetching","currentTarget","searchQuery","value","preventDefault","$7467fde09acedec4$var$resetPage","data","hits","length","$iU1Pc","Notify","failure","classList","remove","add","success","totalHits","$5IjG7","captionsData","captionDelay","$7467fde09acedec4$var$newPage","pages1","$7467fde09acedec4$var$_onLoadMore","newPages","preparingForAdditionalFetch","additionalFetch","info","addEventListener"],"version":3,"file":"loadMoreButton.79d8c793.js.map"}